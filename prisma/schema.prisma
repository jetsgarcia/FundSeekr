generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["neon_auth", "public"]
}

model users_sync {
  raw_json   Json
  id         String      @id @default(dbgenerated("(raw_json ->> 'id'::text)"))
  name       String?     @default(dbgenerated("(raw_json ->> 'display_name'::text)"))
  email      String?     @default(dbgenerated("(raw_json ->> 'primary_email'::text)"))
  created_at DateTime?   @default(dbgenerated("to_timestamp((trunc((((raw_json ->> 'signed_up_at_millis'::text))::bigint)::double precision) / (1000)::double precision))")) @db.Timestamptz(6)
  updated_at DateTime?   @db.Timestamptz(6)
  deleted_at DateTime?   @db.Timestamptz(6)
  investors  investors[]
  startups   startups?

  @@index([deleted_at])
  @@schema("neon_auth")
}

model funding_requests {
  funding_request_id Int                 @id @default(autoincrement())
  funding_stage      funding_stage_enum?
  amount_sought      Int?
  use_of_funds       String?
  decision_timeline  Int?
  startup_id         Int?
  is_open            Boolean
  startups           startups?           @relation(fields: [startup_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model investors {
  id                        Int                     @id @default(autoincrement())
  organization              String?                 @db.VarChar
  position                  String?                 @db.VarChar
  city                      String?                 @db.VarChar
  organization_website      String?                 @db.VarChar
  investor_linkedin         String?                 @db.VarChar
  decision_period_in_weeks  Int?
  typical_check_size_in_php Int?
  investor_type             investor_type_enum?
  preferred_industries      String[]
  excluded_industries       String[]
  preferred_business_models String[]
  preferred_funding_stages  String[]
  geographic_focus          String[]
  value_proposition         String[]
  involvement_level         involvement_level_enum?
  portfolio_companies       String[]
  notable_exits             Json[]
  key_contact_person_name   String?                 @db.VarChar
  key_contact_linkedin      String?                 @db.VarChar
  key_contact_number        String?                 @db.VarChar
  user_id                   String?
  users_sync                users_sync?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  matches                   matches[]

  @@schema("public")
}

model matches {
  id          Int        @id @default(autoincrement())
  percentage  Int
  investor_id Int?
  startup_id  Int?
  investors   investors? @relation(fields: [investor_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  startups    startups?  @relation(fields: [startup_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model startups {
  id                    Int                     @id @default(autoincrement())
  name                  String?                 @db.VarChar
  description           String?
  valuation             Int?
  target_market         String[]
  city                  String?                 @db.VarChar
  date_founded          DateTime?               @db.Date
  industry              String?                 @db.VarChar
  website               String?                 @db.VarChar
  keywords              String[]
  intellectual_property Json[]
  product_demo_url      String?                 @db.VarChar
  key_metrics           Json[]
  team_members          Json[]
  advisors              Json[]
  development_stage     development_stage_enum?
  user_id               String?                 @unique
  funding_requests      funding_requests[]
  matches               matches[]
  users_sync            users_sync?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

enum development_stage_enum {
  Idea
  MVP
  Early_traction @map("Early traction")
  Growth
  Expansion

  @@schema("public")
}

enum funding_stage_enum {
  Pre_Seed  @map("Pre-Seed")
  Seed
  Series_A  @map("Series A")
  Series_B  @map("Series B")
  Series_C_ @map("Series C+")

  @@schema("public")
}

enum investor_type_enum {
  Angel_investor        @map("Angel investor")
  Crowdfunding_investor @map("Crowdfunding investor")
  Venture_capital       @map("Venture capital")
  Corporate_investor    @map("Corporate investor")
  Private_equity        @map("Private equity")
  Impact_investor       @map("Impact investor")

  @@schema("public")
}

enum involvement_level_enum {
  Hands_off   @map("Hands off")
  Advisor
  Active
  Controlling

  @@schema("public")
}
