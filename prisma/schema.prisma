generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["neon_auth", "public"]
}

model users_sync {
  raw_json   Json
  id         String      @id @default(dbgenerated("(raw_json ->> 'id'::text)"))
  name       String?     @default(dbgenerated("(raw_json ->> 'display_name'::text)"))
  email      String?     @default(dbgenerated("(raw_json ->> 'primary_email'::text)"))
  created_at DateTime?   @default(dbgenerated("to_timestamp((trunc((((raw_json ->> 'signed_up_at_millis'::text))::bigint)::double precision) / (1000)::double precision))")) @db.Timestamptz(6)
  updated_at DateTime?   @db.Timestamptz(6)
  deleted_at DateTime?   @db.Timestamptz(6)
  investors  investors[]
  startups   startups[]

  @@index([deleted_at])
  @@schema("neon_auth")
}

model investors {
  organization              String?                 @db.VarChar
  position                  String?                 @db.VarChar
  city                      String?                 @db.VarChar
  organization_website      String?                 @db.VarChar
  investor_linkedin         String?                 @db.VarChar
  decision_period_in_weeks  Int?
  typical_check_size_in_php BigInt?
  preferred_industries      String[]
  excluded_industries       String[]
  preferred_business_models String[]
  preferred_funding_stages  String[]
  geographic_focus          String[]
  value_proposition         String[]
  involvement_level         involvement_level_enum?
  portfolio_companies       String[]
  notable_exits             Json[]
  key_contact_person_name   String?                 @db.VarChar
  key_contact_linkedin      String?                 @db.VarChar
  key_contact_number        String?                 @db.VarChar
  user_id                   String?
  id                        String                  @id @unique @db.Uuid
  govt_id_image_url         String                  @db.VarChar(255)
  selfie_image_url          String                  @db.VarChar(255)
  proof_of_bank_image_url   String                  @db.VarChar(255)
  tin                       Int
  users_sync                users_sync?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  profile_matches           profile_matches[]
  video_pitches             video_pitches[]

  @@schema("public")
}

model profile_matches {
  id               Int       @id(map: "matches_pkey") @default(autoincrement())
  match_percentage Int
  investor_id      String    @db.Uuid
  startup_id       String    @db.Uuid
  investors        investors @relation(fields: [investor_id], references: [id], onDelete: Cascade, map: "investor_id")
  startups         startups  @relation(fields: [startup_id], references: [id], onDelete: Cascade, map: "startup_id")

  @@schema("public")
}

model startups {
  name                    String?                  @db.VarChar
  description             String?
  target_market           String[]
  city                    String?                  @db.VarChar
  date_founded            DateTime?                @db.Date
  industry                String?                  @db.VarChar
  website_url             String?                  @db.VarChar
  keywords                String[]
  product_demo_url        String?                  @db.VarChar
  key_metrics             Json[]
  team_members            Json[]
  advisors                Json[]
  development_stage       development_stage_enum?
  user_id                 String?
  id                      String                   @id @db.Uuid
  govt_id_image_url       String                   @db.VarChar(255)
  bir_cor_image_url       String                   @db.VarChar(255)
  proof_of_bank_image_url String?                  @db.VarChar(255)
  documents               Json[]
  business_structure      business_structure_enum?
  profile_matches         profile_matches[]
  users_sync              users_sync?              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  video_pitches           video_pitches[]

  @@schema("public")
}

model video_pitches {
  id                  Int               @id @default(autoincrement())
  title               String            @db.VarChar(255)
  description         String
  duration_in_seconds Int
  pitch_status        video_status_enum
  video_url           String?           @db.VarChar(255)
  attachment_links    Json[]
  date_sent           DateTime?         @db.Timestamptz(6)
  startup_id          String            @db.Uuid
  investor_id         String            @db.Uuid
  investors           investors         @relation(fields: [investor_id], references: [id], onDelete: Cascade, map: "investor_id")
  startups            startups          @relation(fields: [startup_id], references: [id], onDelete: Cascade, map: "startup_id")

  @@schema("public")
}

enum business_structure_enum {
  Sole
  Partnership
  Corporation

  @@schema("public")
}

enum development_stage_enum {
  Idea
  MVP
  Early_traction @map("Early traction")
  Growth
  Expansion

  @@schema("public")
}

enum involvement_level_enum {
  Hands_off   @map("Hands off")
  Advisor
  Active
  Controlling

  @@schema("public")
}

enum video_status_enum {
  Sent
  Viewed

  @@schema("public")
}
